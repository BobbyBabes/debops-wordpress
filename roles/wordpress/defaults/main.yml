---

# ---- Basic options ----

# Should WordPress role manage its own dependencies?
wordpress_dependencies: True

# Length of randomly generated passwords (it's a string)
wordpress_password_length: '20'


# ---- Database ----

# WordPress database hostname
wordpress_database_hostname: 'localhost'

# WordPress database name
wordpress_database_name: 'wordpress'

# WordPress database username
wordpress_database_username: 'wordpress'

# WordPress database password
wordpress_database_password: "{{ lookup('password', secret + '/credentials/' + ansible_fqdn + '/mariadb/' + wordpress_database_username + '/password length=' + wordpress_password_length) }}"


# ---- Nginx ----

# Enable or disable the use of public key infrastructure with nginx
wordpress_nginx_pki: False

# List of IP addresses or network ranges in CIDR format, allowed to access
# WordPress. Leave empty to allow access from all IP addresses/networks
wordpress_nginx_allow: []


# ---- PHP ----

# Additional PHP packages installed with PHP5
wordpress_php5_packages: [ 'php5-mysqlnd', 'php5-redis', 'php5-mcrypt', 'php5-gd', 'php5-curl', 'php5-dev' ]

# Max upload size for nginx and php5
wordpress_php5_upload_size: '32M'

# Maximum number of PHP5 processes for WordPress
wordpress_php5_max_children: '10'


# ---- Varnish ----

# Port that varnish is listening to.
wordpress_varnish_listen: '6081'

# Port used by the varnish backend server (WordPress in this case)
wordpress_varnish_backend_port: '8080'

# List of addresses that are allowed to purge the Varnish cache
wordpress_varnish_purge_allow: [ '{{ wordpress_url }}', 'localhost', '127.0.0.1', '::1' ]

# Dictionary conditions that will run at the end the vcl_recv subroutine
wordpress_varnish_vcl_recv_conditions:
  'req.http.Cookie ~ "wordpress_" || req.http.Cookie ~ "comment_"': 'return (pass);'
  'req.url ~ "wp-(admin|cron|login)" || req.url ~ "preview=true" || req.url ~ "xmlrpc.php"': 'return (pass);'

# List of regular expressions for cookies that need to be removed during the vcl_recv subroutine
wordpress_varnish_vcl_recv_remove_cookies: [ 'wordpress-settings-[0-9]+?=[^;]+(; )?', 'wordpress-settings-time-[0-9]+?=[^;]+(; )?', 'wordpress_test_cookie=[^;]+(; )?', 'has_js=[^;]+(; )?', '__utm.=[^;]+(; )?', '_ga=[^;]+(; )?', '_gat=[^;]+(; )?', 'utmctr=[^;]+(; )?', 'utmcmd.=[^;]+(; )?', 'utmccn.=[^;]+(; )?', '__gads=[^;]+(; )?', '__qc.=[^;]+(; )?', '__atuv.=[^;]+(; )?' ]

# Dictionary conditions that will run at the end the vcl_recv subroutine
wordpress_varnish_vcl_backend_response_conditions:
  'beresp.http.Set-Cookie && bereq.url !~ "wp-(login|admin)"': 'unset beresp.http.Set-Cookie;'


# ---- WordPress Configuration ----

# WordPress admin email
wordpress_admin_email: 'admin@example.com'

# WordPress admin username
wordpress_admin_username: 'admin'

# Password for MariaDB root user
wordpress_admin_password: "{{ lookup('password', secret + '/credentials/' + ansible_fqdn + '/wordpress/' + wordpress_admin_username + '/password length=' + wordpress_password_length) }}"

# Object cache key salt
wordpress_cache_key_salt: '{{ wordpress_url }}_'

# WordPress root directory
wordpress_root: '/var/www/{{ wordpress_url }}'

# WordPress table prefix
wordpress_table_prefix: 'wp_'

# WordPress Site Title
wordpress_title: '{{ wordpress_url }}'

# WordPress URL address
wordpress_url: '{{ inventory_hostname }}'
